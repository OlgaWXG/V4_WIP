import requests
import json
import time

ACCESS_TOKEN = "eyJhbGciOiJSUzI1NiIsImtpZCI6IlhrUFpfSmhoXzlTYzNZS01oRERBZFBWeFowOF9SUzI1NiIsInBpLmF0bSI6ImFzc2MifQ.eyJzY29wZSI6WyJkYXRhOnJlYWQiLCJkYXRhOndyaXRlIiwiZGF0YTpjcmVhdGUiLCJidWNrZXQ6cmVhZCIsImJ1Y2tldDpjcmVhdGUiXSwiY2xpZW50X2lkIjoiR3JpNUFkME9hYkJlellYNVNld1kwSU9kMEtjQnVkNlEiLCJpc3MiOiJodHRwczovL2RldmVsb3Blci5hcGkuYXV0b2Rlc2suY29tIiwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20iLCJqdGkiOiJDWlhyN3BrQkR6SDRPdUNveE5wUUMwdWE0OE1TMnlKZk0xdTBlTVVndlBWWW1HQlA3VVV5bUZ5UGRsbGdWRGd2IiwiZXhwIjoxNzQwNjQ0MjU4fQ.GLnUckmXCDl8MHENfhfAp0SswNdXl6JzW0ZljGpgWsDhGSryMOClyw2VapziWM_vKnO8GnhY4eGhk8mmyTRE2b8sEQTGCvmuvbCCyCtwOKnt35h7z0C_9TEf0HbiDVuiZ25eXnr_bOK8dnwjMfpcxnQWbW3i6BUQtpR5-8dPhRsViJo8NTI3eME3eSP3T6q4cmWmwQEUn0WzKx9WxHUOsfO5YU9iwxDhhymGVw-xjdoMRdM7svs4o6n3JajqtIKnnbOooPoRT-1lCKF0V2q96D7JSdDs0OjsS4qwRxKRv8pHZP6c0DEam6hIPmxM9Zlw5g2hG_ktFN84Ts0ghYsoWA"  # –û–±–Ω–æ–≤–∏ —Ç–æ–∫–µ–Ω!
URN = "dXJuOmFkc2sud2lwcHJvZDpmcy5maWxlOnZmLmZEeHZLWW12UkVPeE1HRllVazZWYVE_dmVyc2lvbj04"



def get_metadata(access_token, urn):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ GUID –≤ –º–æ–¥–µ–ª–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ JSON"""
    url = f"https://developer.api.autodesk.com/modelderivative/v2/designdata/{urn}/metadata"
    headers = {"Authorization": f"Bearer {access_token}"}

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        data = response.json()
        metadata_list = data.get("data", {}).get("metadata", [])

        with open("guids.json", "w", encoding="utf-8") as f:
            json.dump(metadata_list, f, indent=4, ensure_ascii=False)

        print("‚úÖ GUID —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ 'guids.json'")
        return metadata_list
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}, {response.text}")
        return []

def get_view_metadata(access_token, urn, guid):
    """–ü–æ–ª—É—á–∞–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ GUID"""
    url = f"https://developer.api.autodesk.com/modelderivative/v2/designdata/{urn}/metadata/{guid}"
    headers = {"Authorization": f"Bearer {access_token}"}

    while True:
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            data = response.json()
            return data

        elif response.status_code == 202:
            print(f"‚è≥ –î–∞–Ω–Ω—ã–µ {guid} –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è, –∂–¥—ë–º 10 —Å–µ–∫...")
            time.sleep(10)

        elif response.status_code == 413:
            print(f"‚ùå –û—à–∏–±–∫–∞ 413: –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –æ–±—ä—ë–º –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {guid}.")
            return None

        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code} –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ {guid}")
            return None

def find_base_points(metadata):
    """–ò—â–µ—Ç Project Base Point, Survey Point, Internal Origin –∏ Shared Coordinates –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'Site'"""
    base_point_keywords = ["Base Point", "Survey Point", "Internal Origin", "Shared Coordinates"]
    found_points = []

    for guid, data in metadata.items():
        objects = data.get("data", {}).get("objects", [])

        for obj in objects:
            properties = obj.get("properties", {})

            # –ò—â–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "Site"
            for category, values in properties.items():
                if category.lower() == "site":
                    for key, value in values.items():
                        if any(keyword.lower() in key.lower() for keyword in base_point_keywords):
                            found_points.append((key, value))

    if found_points:
        print("\nüîç –ù–∞–π–¥–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:")
        for name, coords in found_points:
            print(f" - {name}: {coords}")
    else:
        print("\n‚ùå Project Base Point –Ω–µ –Ω–∞–π–¥–µ–Ω!")

# –ü–æ–ª—É—á–∞–µ–º GUID –≤—Å–µ—Ö –≤–∏–¥–æ–≤
metadata_list = get_metadata(ACCESS_TOKEN, URN)

all_metadata = {}

# –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ GUID
for item in metadata_list:
    guid = item["guid"]
    print(f"üîç –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è: {item['name']}")
    metadata = get_view_metadata(ACCESS_TOKEN, URN, guid)
    
    if metadata:
        all_metadata[guid] = metadata

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ JSON
with open("metadata.json", "w", encoding="utf-8") as f:
    json.dump(all_metadata, f, indent=4, ensure_ascii=False)

print("üéâ –í—Å–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ metadata.json")

# üî• –ò—â–µ–º Project Base Point, Survey Point –∏ —Ç.–¥.
find_base_points(all_metadata)