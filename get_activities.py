import asyncio
import aiohttp
from script2 import get_access_token, get_project, get_top_folders, get_all_files, save_to_json

async def get_activities_async(session, access_token, project_id, file_id):
    url = f"https://developer.api.autodesk.com/bim360/admin/v1/projects/{project_id}/activities"

    headers = {'Authorization': f'Bearer {access_token}', 'Content-Type': 'application/json'}
    async with session.get(url, headers=headers) as response:
        if response.status == 200:
            return await response.json()
        return None

async def process_files(access_token, project_id, all_files):
    file_activities = {}
    async with aiohttp.ClientSession() as session:
        tasks = [get_activities_async(session, access_token, project_id, file['id']) for file in all_files]
        results = await asyncio.gather(*tasks)
        for file, activities in zip(all_files, results):
            file_name = file['attributes'].get('displayName', '–ë–µ–∑ –∏–º–µ–Ω–∏')
            file_activities[file_name] = activities
    save_to_json(file_activities, "activities.json")
    print("‚úÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ activities.json")

if __name__ == "__main__":
    access_token = get_access_token()
    project_name = "CONNECT (R23)"  # –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞

    if access_token:
        hub_id, project = get_project(access_token, project_name)
        if project:
            project_id = project['id']
            save_to_json(project, "project_info.json")

            # –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ –ø–∞–ø–∫–∏
            top_folders = get_top_folders(access_token, hub_id, project_id)
            if top_folders:
                save_to_json(top_folders, "top_folders.json")
                print("üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –ø–∞–ø–æ–∫:")
                all_files = get_all_files(access_token, project_id, top_folders)
                if all_files:
                    print("‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã. –ü–æ–ª—É—á–∞–µ–º –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
                    asyncio.run(process_files(access_token, project_id, all_files))
                else:
                    print("‚ùå –§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            print("‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å access token.")
